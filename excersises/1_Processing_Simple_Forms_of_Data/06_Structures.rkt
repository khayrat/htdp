#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 3712 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 483
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname 6_Structu"
 #"res) (read-case-sensitive #t) (teachpacks ((lib \"convert.rkt\" \"te"
 #"achpack\" \"htdp\") (lib \"guess.rkt\" \"teachpack\" \"htdp\") (lib "
 #"\"master.rkt\" \"teachpack\" \"htdp\") (lib \"hangman.rkt\" \"teachp"
 #"ack\" \"htdp\"))) (htdp-settings #(#t constructor repeating-decimal "
 #"#t #t none #f ((lib \"convert.rkt\" \"teachpack\" \"htdp\") (lib \"g"
 #"uess.rkt\" \"teachpack\" \"htdp\") (lib \"master.rkt\" \"teachpack\""
 #" \"htdp\") (lib \"hangman.rkt\" \"teachpack\" \"htdp\")))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 17 #";; POSN -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; produces the distance of the given POSN to the origin"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";; we know from geometry that the distance from the origin to a posi"
 #"tion with coordinates x and y "
) 0 0 24 29 1 #"\n"
0 0 17 3 5 #";; is"
0 0 17 3 10 #" distance "
0 2          13 17 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           1 292
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0<\0\0\0\23\b"
 #"\6\0\0\0\314\6n\221\0\0\0\353IDATX\205\345XA\16\304 \b"
 #"\4\343\377\277\314\236lXZ\24\301@7;\247\306\252#2\203\265HD0\3"
 #"\"\316;\274\20D\204\332\273\36\235\340"
 #"\327\320\252\27\220\215\277\vx*iD"
 #"$\253\234\271\3273-\260\313{$\303"
 #"\203t\20f\25:\17o\231\244\253\252"
 #"\277*\351\359\313~Y\222\366\360\36\315pU\326vx\373\30\260\332\35mR"
 #"\351\37\"\302\35u\254 \213\222\346[+o{\nD\e\310\333\3703\237\343d"
 #"\226W\1xx;\337\265\31f\e\340U\207l\237yr\225\0+\256\242\25)"
 #"R\236\376V\276\247\315\212\330\345V\2644\211k\355^b\17\"|#\206\6`"
 #"/\357\3223U_T\21\270oK\25gm$\3501\317\227\2443%j\365\357"
 #"X\223<\216\274\270y\370\215w\337S\301\2\0 \377\343\221\355\313\n"
 #"|\0'\371\313/X#\232\310\0\0\0\0IEND\256B`\202"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"P1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"P2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"distance-to-0"
0 0 24 3 1 #" "
0 0 14 3 2 #"P1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"distance-to-0"
0 0 24 3 1 #" "
0 0 14 3 2 #"P2"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"distance-to-0"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"P3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"distance-to-0"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Drawing operations on computers interpret the screen as follows:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 2          15 17 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\304\0\0\0\240\b"
 #"\6\0\0\0S\303\303'\0\0\3PIDATx\234\355\335\341r\2420\0"
 #"\205\321\304\361\375_9\373\313zKA"
 #"\1\21\26r\316Lg\354\254\265\254\360"
 #"\231\200Hkk\255\260\\\255u\364\211"
 #"k\255\325\275\227\205\355\334\216^\2003"
 #"\313\215_\b\327 \210\225\306\2\20\305\371\tb\3B\270\16A\254Pkmc"
 #"\373\20S\373\25\234\207 >\220\1\324"
 #"Z\233\221\342\374\252\243L\360d\204\200"
 #" \b\b\253\202\230\332\251\204\263[\264"
 #"\17\341\335Y\256n\223)\223\321b["
 #"\236\317\343\334\347\336q\311J\262B?"
 #"\227\317\241\21x?\263\203X\302\n\374"
 #"\214\27\224\343\314\16\242\265V\255\250\375"
 #"xQ9\306&\373\20V\336\266<\237\307Y\24\2043<\271:\247n@\360N"
 #"5\204\325G\231^\235\335i\347\233\263"
 #"\372\312a\327R\354[p>\265\326f\312\4A\20\20\4\1A\20\20\4\1A"
 #"\20\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A"
 #"\20\20\4\1A\20\20\4\1A\20\20\4\1\341^\312\337+M?\276w\345\f"
 #"zs\363\3273\341\351\2261\b\203\336"
 #"\335J\31\277\322\2368\350\321\237\235j"
 #"\227\241\244g\277\202\20\3\275\273\227\362{z$\nzv\313\2779\355p+\275"
 #"\373\2312\211\1J\271\v\0\236\234\272\1A\20\20\4\1A\20\20\4\1A\20"
 #"\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20"
 #"\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20"
 #"\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20\20\4\1A\20"
 #"\20\4\1A\20\20\4\1A\20\20\4\1A\20\20"
 #"\4\1A\20\20\4\1A\20\20\4\1aq\20\265"
) 405
(
 #"\326Vkm\217\333\333/\22\34gq\20\255\265:v\e\256\300\224\t\302\252 "
 #"\214\f\\\325\352\21B\24\\\221)\23\4A@\20\4\4A@\20\4\4A@"
 #"\20\4\4A@\20\4\4A@\20\4\4A@\270\37\275\0=x|\220j\355"
 #"\t\221\371A,'U~\227\21\342\4D\260\37#\304\16l\320\347a\204\230\220"
 #"\237\35?\352\367\37\365\273{f\204\30"
 #"\221\e\343\273\371\377\253\r\267\265V\207"
 #"\363\377\271\337\17o\177\362\377a>#\304\vs6\304\341E\27\36_S\217\221"
 #"\377\236\e\274\0\376\17\202\0301\334`\367v\364t\255g\246L#\306\246-{"
 #"2B\34\247\353\21blc\237\232\266,\tc\356}\347\214DF\212}\31!"
 #"&\254\331\20_\5\366\3561k\255\3551\"\345\355\261\3070\202|\217 \6>"
 #"\331\330\306~\366\335\343\215\355to\261"
 #",\254\323\365\224\t\206\272\fb\313\v"
 #"6\317\235\22q\16\335M\231\246\346\371k\247'\2465\327\322\345\b\1S.?"
 #"B\314\235\306\f\357\347\225\277O\227\17"
 #"b\356\373\t\2\240\224\16\247Lk\16\215\322\217\356\202(\345\367\tvb u"
 #"\31\4L\21\4\4A@\350:\b\373\17\fu\35\4\f\t\2\202  \b\2"
 #"\202  \b\2\202  \b\2\202  \b\2\202  \b\2\202  \b\2"
 #"\202  \b\2\202  \b\2\202  \b\2\302\327.e\351\322\360"
 #"\234\321?\240\267Jf1\344\tB\0\0\0\0IEND\256B`\202"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.2.1"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 15 #"draw-solid-line"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"red"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 15 #"draw-solid-rect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"blue"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 11 #"draw-circle"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 15 #"draw-solid-disk"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"80"
0 0 17 3 2 #") "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"green"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"(stop)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; dimensions of traffic light"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"BULB-DISTANCE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; the position fo the bulbs"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-RED"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 13 #"BULB-DISTANCE"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Y-YELLOW"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-RED"
0 0 24 3 4 #"    "
0 0 14 3 13 #"BULB-DISTANCE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Y-GREEN"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"Y-YELLOW"
0 0 24 3 1 #" "
0 0 14 3 13 #"BULB-DISTANCE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; draw the ligth with red bulb turned on"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(start WIDTH HEIGHT)"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";(draw-solid-disk (make-posn X-BULBS Y-RED)    BULB-RADIUS 'red)"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";(draw-circle     (make-posn X-BULBS Y-YELLOW) BULB-RADIUS 'yellow)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";(draw-circle     (make-posn X-BULBS Y-GREEN)  BULB-RADIUS 'green)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Exercise 6.2.2.   Develop the function clear-bulb. It consumes a "
 #"symbol "
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; that denotes one of the possible colors: 'green, 'yellow, or 'red"
 #", and "
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; it produces true. Its effect is ``to turn off'' the matching bulb"
 #" in the"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; traffic light. Specifically, it should clear the disk and display"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; a circle of the matching color instead."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; SYMBOL -> BOOLEAN"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; consumes a symbol on of: 'green, 'yellow, or 'red, and "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; produces true and clears the disk and display a circle of "
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; the matching color instead."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"clear-bulb"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 6 #")    ("
0 0 14 3 10 #"clear-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-RED"
0 0 24 3 2 #") "
0 0 14 3 1 #"l"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #") ("
0 0 14 3 10 #"clear-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 8 #"Y-YELLOW"
0 0 24 3 2 #") "
0 0 14 3 1 #"l"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 4 #")  ("
0 0 14 3 10 #"clear-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 7 #"Y-GREEN"
0 0 24 3 2 #") "
0 0 14 3 1 #"l"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; POSN SYMBOL -> BOOLEAN"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; produces true if the BULB at the given postion could be cleared"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"clear-disk"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"clear-solid-disk"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"draw-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";(clear-bulb 'red)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Exercise 6.2.3.   "
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; Develop a function draw-bulb. It consumes a symbol that denotes o"
 #"ne of"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; the possible colors: 'green, 'yellow, or 'red, and produces true."
 #" Its effect "
) 0 0 24 29 1 #"\n"
0 0 17 3 57
#";; is \"to turn on\" the matching bulb in the traffic light"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Symbol -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; consumes a symbol that denotes one of the colors: 'green, 'yellow"
 #", or 'red, "
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; and produces true. Its effect is \"to turn on\" the matching bulb"
 #" in the traffic light"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-bulb"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 6 #")    ("
0 0 14 3 15 #"draw-solid-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-RED"
0 0 24 3 5 #")    "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #") ("
0 0 14 3 15 #"draw-solid-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 8 #"Y-YELLOW"
0 0 24 3 2 #") "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 4 #")  ("
0 0 14 3 15 #"draw-solid-disk"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"X-BULBS"
0 0 24 3 1 #" "
0 0 14 3 7 #"Y-GREEN"
0 0 24 3 3 #")  "
0 0 14 3 11 #"BULB-RADIUS"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";(draw-bulb 'green)"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";(draw-bulb 'yellow)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Exercise 6.2.4.   "
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; Develop the function switch. It consumes two symbols, each of whi"
 #"ch stands for "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; a traffic light color, and produces true. Its effects are to clea"
 #"r the bulb for "
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";; the first color and then to draw the second bulb"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Symbol Symbol -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; consumes two symbols, each of which stands for a traffic light co"
 #"lor, "
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; and produces true. Its effects are to clear the bulb for the firs"
 #"t color and "
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; then to draw the second bulb"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"clear-bulb"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"draw-bulb"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";(switch 'red 'yellow)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.2.5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; next : symbol  ->  symbol"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; to switch a traffic light's current color and to return the next "
 #"one "
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; consumes the current color of a traffic light (as a symbol) and p"
 #"roduces the "
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; next color that the traffic light shows. "
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; That is, if the input is 'green, it produces 'yellow; if it is 'y"
 #"ellow, it produces "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; 'red; and if it is 'red, it produces 'green. Its effect is to swi"
 #"tch the traffic"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";; light from the input color to the next color."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"next"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 3 #") ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #") ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 3 #") ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; Replace the last three lines of the program fragment in figure 8 "
 #"with "
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; (draw-bulb 'red). This creates a traffic light that is red. Then "
 #"use next to switch "
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; the traffic light four times"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";(start)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(draw-bulb 'red)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(next (next (next (next 'red))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.3.2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"movie"
0 0 24 3 2 #" ("
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 8 #"producer"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";(movie-title (make-movie 'bla 'blub))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.4.2"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; Provide a structure definition and a data definition for represen"
 #"ting points in "
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; time since midnight. A point in time consists of three numbers: h"
 #"ours, minutes, "
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; and seconds"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"mtime"
0 0 24 3 2 #" ("
0 0 14 3 5 #"hours"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Time is (make-mtime hours minutes seconds) where h,m,s are Number"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.4.3"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; Provide a structure definition and a data definition for represen"
 #"ting three-letter"
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; words. A word consists of letters, which we represent with the sy"
 #"mbols 'a through 'z."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"wordv1"
0 0 24 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #" "
0 0 14 3 2 #"s3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Word is (make-wordv1 s1 s2 s3) where s[1-3] are symbols [a-z]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.5.2"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; Develop the function time->seconds, which consumes a time structu"
 #"re "
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; (see exercise 6.4.2) and produces the number of seconds since mid"
 #"night that "
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; the time structure represents."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; MTime -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; consumes a time structure and produces the number of seconds sinc"
 #"e midnight"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"time->seconds"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-mtime"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"  "
0 0 21 3 1 #"0"
0 0 24 3 2 #"  "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"time->seconds"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-mtime"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #"  "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"*"
0 0 24 3 4 #"    "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"time->seconds"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-mtime"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"45002"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"time->seconds"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mtime-hours"
0 0 24 3 3 #"   "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 4 #"    "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mtime-minutes"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"mtime-seconds"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.1"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Provide a structure definition and a data definition for represen"
 #"ting colored "
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; circles. A circle is characterized by three pieces of information"
 #": its center, "
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; its radius, and the color of its perimeter. The first is a posn s"
 #"tructure, the "
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";; second a number, and the third a (color) symbol."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Data Defintion"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; A Circle is a structure: (make-circle center radius color)"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; where center is a Posn   represending the center of the circle"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;       radius is a Number representing the radius of the circle"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;       color  is a Symbor representing the color of the circle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 6 #"center"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; Develop the template fun-for-circle, which outlines a function th"
 #"at consumes "
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";; circles. Its result is undetermined. "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 17 29 1 #"\n"
0 0 17 3 16 #";; Circle -> ???"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"fn-for-circle"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"  ... (circle-center"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 15 #" (circle-radius"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 21 #"circle-color c)  ...)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.2"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; Use fun-for-circle to develop draw-a-circle. The function consume"
 #"s a circle structure"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; and draws the corresponding circle on the screen. Use (start 300 "
 #"300) to create "
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";; the canvas before testing the function."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Circle -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; consumes a circle and draws the corresponding circle on the scree"
 #"n"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"                   ("
0 0 17 3 11 #"draw-circle"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                                "
0 0 17 3 2 #"40"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                                "
0 0 17 3 1 #"'"
0 0 17 3 3 #"red"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"                   ("
0 0 17 3 13 #"draw-a-circle"
0 0 17 3 1 #" "
0 0 17 3 2 #"C1"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-a-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"draw-circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"circle-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 12 #"circle-color"
0 0 24 3 2 #"  "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.3"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; Use the template fun-for-circle to develop in-circle?. The functi"
 #"on consumes a circle "
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; structure and a posn and determines whether or not the pixel is i"
 #"nside the circle."
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; All pixels whose distance to the center is less or equal to the r"
 #"adius are inside the"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; circle; the others are outside."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; Consider the circle in figure 14. The circle's center is (make-po"
 #"sn 6 2), its radius"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; is 1. The pixel labeled A, located at (make-posn 6 1.5), is insid"
 #"e the circle. "
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";; The pixel labeled B, located at (make-posn 8 6), is outside. "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Circle Posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; consumes a circle and a posn; produces True if the pixel is insid"
 #"e the circle"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"5.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"in-circle?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"circle-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Posn Posn -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; produces the distance between the given points"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 7 #"0.00001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 3 #"sqr"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 8 #"0.000001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 7 #"0.00001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.4"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; Use the template fun-for-circle to develop translate-circle. The "
 #"function consumes"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; a circle structure and a number delta. The result is a circle who"
 #"se center is delta "
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; pixels to the right of the input. The function has no effect on t"
 #"he canvas."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; Geometric Translation: Moving a geometric shape along a straight "
 #"line is referred to "
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";; as a translation. "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Circle Number -> Circle"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; consumes a circle structure and a number delta. The result is a c"
 #"ircle whose center "
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; is delta pixels to the right of the input"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"translate-circle"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 13 #"circle-radius"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 12 #"circle-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"C1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"translate-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 14 3 5 #"delta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"circle-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 12 #"circle-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.5"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; Use the template fun-for-circle to develop clear-a-circle. The fu"
 #"nction consumes"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; a circle structure and clears the corresponding circle on the can"
 #"vas.  "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Circle -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; consumes a circle structure and clears the corresponding circle o"
 #"n the canvas.  "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"clear-a-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"clear-circle"
0 0 24 3 2 #" ("
0 0 14 3 13 #"circle-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"circle-radius"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"(start 300 300)"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"(draw-a-circle"
0 0 17 3 1 #" "
0 0 17 3 2 #"C1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 18 #"clear-a-circle C1)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.6"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; Define the function draw-and-clear-circle, which draws a circle s"
 #"tructure, waits "
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; for a short time, and clears it. To implement a waiting period, t"
 #"he teachpack "
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; draw.ss provides the function sleep-for-a-while. It consumes a nu"
 #"mber and puts "
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; the program to sleep for that many seconds; its result is true. F"
 #"or example, "
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (sleep-for-a-while 1) waits for one second."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Circle -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"draw-and-clear-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-a-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"sleep-for-a-while"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"clear-a-circle"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 21 #"draw-and-clear-circle"
0 0 17 3 1 #" "
0 0 17 3 3 #"C1)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; move-circle : number number circle  ->  circle"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; to draw and clear a circle, translate it by delta pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-circle"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-circle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 21 #"draw-and-clear-circle"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-circle"
0 0 24 3 3 #") ("
0 0 14 3 16 #"translate-circle"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-circle"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-circle"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"STEP"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"600"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 13 #"draw-a-circle"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 13 #" (move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"                                        ("
0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 3 #"   "
0 0 17 29 1 #"\n"
0 0 17 3 54 #"                                                     ("
0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 67
#"                                                                  ("
0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 80
(
 #"                                                                    "
 #"           ("
) 0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 29 1 #"\n"
0 0 17 3 93
(
 #"                                                                    "
 #"                        ("
) 0 0 17 3 11 #"move-circle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 1 #" "
0 0 17 3 2 #"C1"
0 0 17 3 9 #")))))))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.7"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Provide a structure definition and a data definition for represen"
 #"ting colored "
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; rectangles. A rectangle is characterized by four pieces of inform"
 #"ation: "
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; its upper-left corner, its width, its height, and its fill color."
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; The first is a posn structure, the second and third quantities ar"
 #"e plain numbers, "
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; and the last one is a color."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Data definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ul-corner"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; A rectangle is characterized by four pieces of information: "
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; its upper-left corner, its width, its height, and its fill color."
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; The first is a posn structure, the second and third quantities ar"
 #"e plain numbers, "
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; and the last one is a color."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 3 #"200"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";; Develop the template fun-for-rect, which outlines a function that"
 #" consumes rectangles. "
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Its result is undetermined. "
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"(define ("
0 0 17 3 17 #"fn-for-rectangle "
0 0 17 3 1 #"r"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"  ..."
0 0 17 3 21 #" (rectangle-ul-corner"
0 0 17 3 1 #" "
0 0 17 3 1 #"r"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 5 #"  ..."
0 0 17 3 17 #" (rectangle-width"
0 0 17 3 5 #"     "
0 0 17 3 1 #"r"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 5 #"  ..."
0 0 17 3 25 #" (rectangle-height    r) "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 5 #"  ..."
0 0 17 3 28 #" (rectangle-color     r) ..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.8"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Use the template fun-for-rect to develop draw-a-rectangle."
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; The function consumes a rectangle structure and draws the corresp"
 #"onding "
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; rectangle on the screen. In contrast to circles, the entire recta"
 #"ngle is"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; painted in the matching color. "
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; Remember to use (start 300 300) to create the canvas before testi"
 #"ng "
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";; the function."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Rectangle -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"draw-a-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-rect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 15 #"rectangle-width"
0 0 24 3 5 #"     "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 16 #"rectangle-height"
0 0 24 3 4 #"    "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 15 #"rectangle-color"
0 0 24 3 5 #"     "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 16 #"draw-a-rectangle"
0 0 17 3 1 #" "
0 0 17 3 2 #"R1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.6.9"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Use the template fun-for-rect to develop in-rectangle?. "
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; The function consumes a rectangle structure and a posn and determ"
 #"ines whether or not "
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";; the pixel is inside the rectangle. "
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; A pixel is within a rectangle if its horizontal and vertical dist"
 #"ances to the "
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; upper-left corner are positive and smaller than the width and hei"
 #"ght of the rectangle,"
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";; respectively."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Rectangle Posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; consumes a rectangle and a posn, determines whether the pixel is "
 #"inside the rectangle."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"111"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"211"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 18 #"example-rectangle1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"in-rectangle?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 15 #"rectangle-width"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 16 #"rectangle-height"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Exercise 6.6.10"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Use the template fun-for-rect to develop translate-rectangle."
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; The function consumes a rectangle structure and a number delta. "
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; The result is a rectangle whose upper-left corner is delta pixels"
 #" to"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; the right of the input. The function has no effect on the canvas."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Rectangle Number -> Rectangle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"translate-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-rectangle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"rectangle-width"
0 0 24 3 2 #"  "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"rectangle-height"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"rectangle-color"
0 0 24 3 2 #"  "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Exercise 6.6.11"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; Use the template fun-for-rect to develop clear-a-rectangle. "
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; It consumes a rectangle structure and clears the corresponding re"
 #"ctangle"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; on the canvas."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Rectangle -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"clear-a-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"clear-solid-rect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rectangle-ul-corner"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"rectangle-width"
0 0 24 3 5 #"     "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 16 #"rectangle-height"
0 0 24 3 4 #"    "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Exercise 6.6.12"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Here is the move-rectangle function:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; move-rectangle : number rectangle  ->  rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; to draw and clear a rectangle, translate it by delta pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 1 #" "
0 0 14 3 11 #"a-rectangle"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 24 #"draw-and-clear-rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"a-rectangle"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 19 #"translate-rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"a-rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"delta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 11 #"a-rectangle"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; It draws and clears a rectangle circle on the canvas and then pro"
 #"duces "
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";; a translated version."
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; Develop draw-and-clear-rectangle, which draws a rectangle, sleeps"
 #" for a while, "
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; and then clears the rectangle. Finally, create a rectangle and us"
 #"e "
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";; the functions of this exercise set to move it four times"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Rectangle -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"draw-and-clear-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"draw-a-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"sleep-for-a-while"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/2"
0 0 24 3 8 #")       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"clear-a-rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 3 #"500"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"move-rectangle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 14 #"move-rectangle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 33 #"                                ("
0 0 17 3 14 #"move-rectangle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 49 #"                                                ("
0 0 17 3 14 #"move-rectangle"
0 0 17 3 1 #" "
0 0 17 3 4 #"STEP"
0 0 17 3 1 #" "
0 0 17 3 2 #"R1"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.7.1"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; Develop the function draw-next-part, which draws the pieces of a "
 #"hangman "
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";; figure. The function consumes one of the seven symbols:"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; 'right-leg 'left-leg 'left-arm  'right-arm   'body   'head   'noo"
 #"se      "
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; It always returns true and draws the matching part of the figure."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HWIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"HHEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HWIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"STICK-W"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"HEAD-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 1 #" "
0 0 14 3 7 #"STICK-W"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BODY-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"HEAD-START"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BODY-LENGTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"HHEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ARM-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"BODY-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BODY-LENGTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ARM-LENGTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LEG-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"BODY-START"
0 0 24 3 1 #" "
0 0 14 3 11 #"BODY-LENGTH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEG-LENGTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"NOOSE-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"HEAD-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"NOOSE-WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"NOOSE-LENGTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 2          25 17 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           7 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\320\0\0\1H\b"
 #"\6\0\0\0!\346p\356\0\0\v\266IDATx\234\355\335!w\333\310\36"
 #"\206\361\177\357\21\320G\2700`A`"
 #"\240AA\340B\303\302\200\202\300\5\v\n\27\6,(\f(\bXP\30X\30"
 #"P`\30\30\260\340~\f\1\235\323\v\344q$Y\222\245ye\317\214\364\374\316"
 #"\351Il+\216\222\350\351\314\310v\362"
 #"\341\355\337\267_\6`\262\353\337\256-"
 #"33\273\272\272\n\274+@Z\356?"
 #"\337\233\231U\1\231\231\355~\356\202\355"
 #"\f\220\252\377\204\336\1 e\331\351M"
 #"\342\364\364\364\24z\27V\347\361\333#"
 #"3\225\226I\1\335\336\336v^\377\362"
 #"\3622\303\256L\367\364\364\337\216k\213"
 #"\236\255S\270>\246}9\276\376\361\333"
 #"c\317v\3535*\240\367p\272\277\321"
 #"\267\267\271\231\205\v\t\b\345d@\267"
 #"\267\267\357\331\224\325\233\374\350\243\212\375"
 #"\2669\21a\26\233\217\233\321\333N\231"
 #"Vn>n\354\313\237_l\273\335\316\262\335`@\215x\314\314\262j\244)\312"
 #"\242#\"3\263brD\317\317\317f"
 #"f\235;\372\374\374|\362\v\350\334\213"
 #"\362\241q9\317\276L\276\217\330\24\345"
 #"k\343r\236\335\4\332\223\313\371\362\347"
 #"\270\237\233\31712tl\271x\306\360"
 #">\211P\224]#\221\237\207\277\37\216jwaM\337\257*\36\27MQ>X"
 #"Q>X\236\375\241\357h .\36\27MQ\276ZQ\276Z\236]\207\334\255\213"
 #"\30\212c\312\201\356\354~\356\16\307[WD\365\373\34\23fo\2G\243O\343"
 #"\243r\263\262\177\341\3513\225s_T"
 #"\337\3451\212\362/3k\2168\365\367\213\362kc{\27UQ>\356/\337\327"
 #"\336\277\333\337\366\324\270\\]\367}\177\335\247\306\345\367"
 #"\373\335\326\266\375\321\272\355\367\321_\317\373\307,\177\264\271"
) 500
(
 #"\244\276\210\246\306c&>\16T\224\343\267\335|\334t\37633\373\376Ou\0"
 #"\336\334\334\330\303\337\17vs3\377\1\343\342\311\263?j\341|mm\363hy"
 #"v\277\177\377i\344\375\272\230\266\207p"
 #"\212\362\271\3616\317~?\204\323\16\252"
 #"\377~wV\224\307s\373\366hT]\367fE\3716\352~/\251\375s\216\211"
 #"\213\310\254\232\355\370\304c\346;\205\353"
 #"\35}\372\271HB\0313\205s\3614"
 #"\257\273\263\242|\262\242|\332\277\337\34"
 #"}\334\333!E\371\243\21\321\360\266\357"
 #"\321\344\331\246u\333q<\325\345\353FDyvu\362\363\\\312\356\347\316{-"
 #"{n\365\221\310'\0363\237\200\\<"
 #"\373i\334\330\265\320\353\353\353\340\355\337"
 #"\377\371~\330\346\324\266\276\332#\316|"
 #"\367\333\375\237C5\"\25V\224?\16#\317PD.\236v8\325m\335\361\274"
 #"\177\256\353\375voV\224\377\213&\""
 #"\337\265l*\374F\240\375\331\270\341\265"
 #"PS_\331\356\e\334\216g\356\210\352"
 #"S\270\372\3451\352\243Pu\371}\324"
 #"\251O\341\252\313\307\aL\236\375~\b"
 #"\310\215F\335\237g\323\230\272\271\220N"
 #"\305Sm\363>\205\213%\236\335\317]\224#\217S\237\266\r\235X\0302m\r"
 #"\324\23\313\224\265P\27\27\313v\273="
 #"\374\363\221g\177\355\367\347\3754\266;\v\27BQ>\217\32y\352\362lS\v"
 #"g\334\343\e\357S\267\353U\234\231\233"
 #"C{\315\323^\23\215\325;\2\275\274"
 #"\274X\336u&\316\215>\365\313\215\260"
 #"\374\36LmG\263\335n\275\206\377<"
 #"\373r\24Mu&\256\260\242\374\332\30"
 #"\211\252\313\343\236\236\342F\241\366\232'"
 #"\317>YQ~\257\2350\330\356\303y"
 #"\256\275\377\243\266\375\370\220\332\216\37\v"
 #"\272n\274]\242s\234\200\350;ap\352\24w\227\361S"
 #"\270\23S5\337\307\205\206v\322\177$\352>\375\335>\221P"
) 500
(
 #"]>\376\272\252\223\t]\327\337\365\334"
 #"\357\247\306\366\365\323\330>\247\255\217\357"
 #"\177\275\247\261\247>\224q\312\251\263m"
 #"S#\32<\344\217F\241\366\350S\277"
 #"\276,\314w\364\1\332\316\275~\32\272"
 #"\357zD\247\234\\\3\275\274\274Xnfy_<f\207\333\211\a\261\e\e\346"
 #"\330\355FM\272\\\30yd/g\0B\233\264j\211)\224\307o\217\366\370-"
 #"\364^`\355\222}E*\257\214D\f\370\235\b\200\340h\4\212\361\211\177@,"
 #"\3323\37F @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b\20"
 #"\20\20   @p\364L\204\241\227- \214\302\343\267 \3412\216\177\3135"
 #"?\254\250\360\37Z\334\230\302\1\2\2\2\4\4\4\b\b\b\20\20\20   "
 #"@@@\200\200\200\0A\262\277\225\a"
 #"#\214}\20\226\a\317\275\21\320\222\264"
 #"\203\31\e\206\357\307\201\200\222W?\370"
 #"}\17\374\366\307\315q\237+A@\251r\a\3719\16\360\372}\236\363\363,\0"
 #"\1\245\346\322\at\375Oz^\362\363&\202\200R2\341Oj\316\256\365\267q"
 #"Q!\240\24\304\364\277\177Y\304\265?\201\3618P\344\16\207hL\ak{Z"
 #"\267b\4\24\263\230\377\247'\"3#"
 #"\240x\355\327\32Q\37\236e\321\234\322"
 #"\255\20\1\305(\305\0032\305}\236\1\1\305\2465mK\342wT\254x:G"
 #"@1J!\232\266\24\367y\6\4\24\223\324\37cY\341z\210\200b\221z<"
 #"\316\312\"\"\240\5;\365;\345\370\235s:\2\212\301\231F\237\242,z#\311"
 #"\263\374|'(V4\n\21\320\302uEt\326xV\206\200B\273\300\332\247\36"
 #"\321\305\342Y\311(D@+\341\"b\344\231\27\317\306\216P\337\272E9\370]"
 #"<S\":\265-A\22PX\255\351\233\v\247"
 #"\357\240<u{\237\372\201>%\242\241mG\335"
) 500
(
 #"\207\233\306-82\2\212\300\3300\334"
 #"\355SB\352:\320\325\210\30y\336\261\6\n\314gTi\2074t\337}\367;"
 #"t\212{h[\342i\"\240\b\370\34\220cG\217\271>/'!\272\21P("
 #"Yn\271i'\6\246\214\"\252\372I\210I\26~:\233\200pR\327I\bT"
 #"\b(\20u\364q\316}@\17\235\204\0\1a\300\\'!\226\214\200\320k\316"
 #"\223\20KE@\200\200\200\0\1\1\1\2\2\n\244\260y^\21\312\203\233a\21"
 #"\20  \240P\312B\36\205\222\30}\26\376ll\2\212\200OD<\6\23\a"
 #"\2\nl\3543\253\353|_\27\204\371"
 #"\361z\240\b\214}\235\17\341\304\207\200"
 #"Bj\275b\363\324h\224\\8\v_\377\230\21P\224x\365g:X\3\1\2"
 #"\2\nm\251/8[\301\364\315\214\200\0\t\1\305`i\243\320JF\37\263\4"
 #"O\"\264\317P\261\300N_\312?\323"
 #"\344\2j\237\241Z\314)\337\245\374\22"
 #"\302\201\257a\350\301\342\344~^{\311"
 #"\5T7\364\200c\222a\245\36\221\373\313\342\v\f\245O\322\1\365I>\254D"
 #"\"\352\374^\256\354\331\22\213\f\250O"
 #"\22a\271Q(\242\210N\216(\255\277,\276&\253\n\250Ota\5:+'"
 #"M\275V\30\217\31\1\r\n\32\326\31#\232m\215\262\342\221\307! \17\27\v"
 #"K\234\316\235u1O<fF@\263:kX1\235\36&\236\3\2\272\09"
 #"\254\21/\272\273\330\311\216\210Nn\304"
 #"\200\200\2\32\eV\375\375\303G\\\372 f\324\351D@\21\32\365z\240K\35"
 #"\320\2043\210\200R\345\16\350\372\264n"
 #"\256\203\374\34\367\271P\4\224\272\372\1\336^#M9A\341\363q \240Ei"
 #"\37\370c\37G\"\30o\4\264d\204qv\274\240\16\20\20\20 "
 #"  @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
) 500
(
 #"\20\20\20   @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
 #"\20\20\20   @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
 #"\20\20\20   @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
 #"\20\20\20   @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
 #"\20\20\20   @@@\200\200\200\0\1\1\1\2\2\2\4\4\4\b\b\b"
 #"\20\20P\304\362,o\274E|\b(R.\232\242,\32\227\21\227,\364\16\240"
 #"\251\35N\375\375\256\333\20\26\1EbL\34\204\24\37\246p\201\345Y>9\210"
 #"zHL\355\302\"\240\200\352\341L\35M\352\37CD\3410\205\v`\316)\30"
 #"\323\272\260\b\350\202\316y\220\23R\30"
 #"L\341.\300g\235\343\213\365\321e\21"
 #"\320\231)\353\34_\254\217.\207)\334\231\3040\225bZw~\0044\263\30\17"
 #"VB:\37\246p3\271\344:\307\27\353\243\371\21\320\fB\254s|\261>\232"
 #"\27S8A\354#\316\20\246u\363  \17K:\350\bI\303\24n\202\24\326"
 #"9\276X\37\371!\240\221RZ\347\370b}4\35S\270\23\226:\342\faZ"
 #"7\36\1\365\340\340!\2441\230\302\265,y\235\343\213\365Q?\2\252Y\303:"
 #"\307\27\353\243nL\341\214)\312\24L\353\232V\35\20\a\201?B\252\254r\n"
 #"\307:g>k_\37\255. \3269\363[\363\372h5S8F\234\363[\343"
 #"\264n\361\1\255\351\207\31\2135\205\264"
 #"\330)\34\353\234\360\326\260>Zd@"
 #"\254s\342\261\364\365\321\242\246p\2148"
 #"\361Z\352\264n\21\1-\355\207\262dK\v)\351)\34\353\234t-e}\224"
 #"l@\254s\322\267\204\365QrS8F\234\345IyZ\227L"
 #"@)~s1M\212!E?\205c\235\263>)\255\217\242\16"
) 500
(
 #"\210u\316z\245\262>\212r\n\307\210\3'\366i]T\1\305\372MBx\261"
 #"\206\24\315\24.\266o\f\342\24\333\264.\232\21\210p0VL\307J4#\20"
 #"\220\"\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1"
 #"\1\2\2\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\301\207"
 #"\267\177\337~]]]\331\356\347\316\314\3146\0377\201w\tHG\26z\a\200"
 #"\224\334\177\276o\\& `\202\273\273;3\253fj\367\237\357Y\3\1\n\2"
 #"\2\4\4\4\b\b\b\20\20\20   @@@\200\200\200\0\1\1\1\2\2"
 #"\2\4\4\4\b\b\b\20\20\20 8z6\266{]\20\260D\356Y\324\356Y"
) 55
(
 #"\325*F @\220\231\35\277H\bX*\367\212\353\271^y\375\301\314~\315r"
 #"O@\2\212\262\230u\300\370?\307s{D~\224*2\0\0\0\0IEND\256B`\202"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Symbol -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"draw-next-part"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"right-leg"
0 0 24 3 3 #") ("
0 0 14 3 9 #"right-leg"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 8 #"left-leg"
0 0 24 3 3 #") ("
0 0 14 3 8 #"left-leg"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"right-arm"
0 0 24 3 3 #") ("
0 0 14 3 9 #"right-arm"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 8 #"left-arm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"left-arm"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 4 #"head"
0 0 24 3 3 #") ("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 5 #"noose"
0 0 24 3 3 #") ("
0 0 14 3 5 #"noose"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"right-leg"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-line"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 9 #"LEG-START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEG-LENGTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"LEG-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"left-leg"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-line"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 9 #"LEG-START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEG-LENGTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"LEG-START"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"right-arm"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-line"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 9 #"ARM-START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 14 3 10 #"ARM-LENGTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"ARM-START"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"left-arm"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-line"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 9 #"ARM-START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 14 3 10 #"ARM-LENGTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"ARM-START"
0 0 24 3 1 #" "
0 0 14 3 6 #"HSPACE"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-line"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 10 #"BODY-START"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"BODY-START"
0 0 24 3 1 #" "
0 0 14 3 11 #"BODY-LENGTH"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"draw-circle"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 1 #" "
0 0 14 3 10 #"HEAD-START"
0 0 24 3 2 #") "
0 0 14 3 11 #"HEAD-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"noose"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"draw-solid-rect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"HMID"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"NOOSE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 11 #"NOOSE-START"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 11 #"NOOSE-WIDTH"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 12 #"NOOSE-LENGTH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 6 #"HWIDTH"
0 0 24 3 1 #" "
0 0 14 3 7 #"HHEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 15 #"draw-solid-line"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 6 #"HSPACE"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"HMID"
0 0 17 3 1 #" "
0 0 17 3 6 #"HSPACE"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 15 #"draw-solid-line"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"HMID"
0 0 17 3 1 #" "
0 0 17 3 6 #"HSPACE"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"HMID"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 6 #"HSPACE"
0 0 17 3 1 #" "
0 0 17 3 7 #"STICK-W"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"head"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"body"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"right-arm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 8 #"left-arm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 8 #"left-leg"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"right-leg"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 14 #"draw-next-part"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"noose"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;Exercise 6.7.2"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Provide"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"structure"
0 0 17 3 1 #" "
0 0 17 3 10 #"definition"
0 0 17 3 40 #" and a data definition for representing "
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; three-letter words."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #"("
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #" "
0 0 14 3 2 #"l3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Word has three letters"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"fn-for-word"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 7 #"word-l1"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 7 #"word-l2"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 7 #"word-l3"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Exercise 6.7.3"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Develop"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 46 #" function reveal. It consumes three arguments:"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; the"
0 0 17 3 1 #" "
0 0 17 3 6 #"chosen"
0 0 17 3 1 #" "
0 0 17 3 4 #"word"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 27 #"word that we have to guess;"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; the"
0 0 17 3 1 #" "
0 0 17 3 6 #"status"
0 0 17 3 1 #" "
0 0 17 3 4 #"word"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 5 #"shows"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 7 #"portion"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 34 #"word has been revealed so far; and"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; a"
0 0 17 3 1 #" "
0 0 17 3 35 #"letter, which is our current guess."
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; The"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 8 #"produces"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 6 #"status"
0 0 17 3 1 #" "
0 0 17 3 4 #"word"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 31 #", a word that contains ordinary"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; letters"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"_."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"fields"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 6 #"status"
0 0 17 3 1 #" "
0 0 17 3 4 #"word"
0 0 17 3 33 #" are determined by comparing the "
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; guess"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 4 #"each"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"letters"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 33 #" status word and the chosen word:"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; If"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"guess"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"equal"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"letter"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"chosen"
0 0 17 3 1 #" "
0 0 17 3 23 #"word, the guess is the "
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; corresponding"
0 0 17 3 31 #" letter in the new status word."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Otherwise"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 6 #"letter"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 43 #" corresponding letter from the status word."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Word Word Symbol -> Word"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reveal"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"u"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reveal"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reveal"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reveal"
0 0 24 3 1 #" "
0 0 14 3 2 #"cw"
0 0 24 3 1 #" "
0 0 14 3 2 #"sw"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-word"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reveal1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"word-l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"cw"
0 0 24 3 3 #") ("
0 0 14 3 7 #"word-l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"sw"
0 0 24 3 2 #") "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"reveal1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"word-l2"
0 0 24 3 1 #" "
0 0 14 3 2 #"cw"
0 0 24 3 3 #") ("
0 0 14 3 7 #"word-l2"
0 0 24 3 1 #" "
0 0 14 3 2 #"sw"
0 0 24 3 2 #") "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"reveal1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"word-l3"
0 0 24 3 1 #" "
0 0 14 3 2 #"cw"
0 0 24 3 3 #") ("
0 0 14 3 7 #"word-l3"
0 0 24 3 1 #" "
0 0 14 3 2 #"sw"
0 0 24 3 2 #") "
0 0 14 3 1 #"g"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Symbol Symbol Symbol -> Symbol"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reveal1"
0 0 24 3 1 #" "
0 0 14 3 2 #"cl"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 2 #"cl"
0 0 24 3 2 #") "
0 0 14 3 2 #"cl"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"hangman"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-word"
0 0 24 3 1 #" "
0 0 14 3 6 #"reveal"
0 0 24 3 1 #" "
0 0 14 3 14 #"draw-next-part"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; Aldi"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; bn1oSyno"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; allndg+23x"
0           0
